---
layout:     post
title:      猜数字的简易AI
category:   技术
excerpt: 还记得文曲星上的经典游戏：“猜数字”么。猜一个四位数，电脑会用?A?B的方式反馈你猜测数字的正确情况，总共有8次机会。 高中时曾一度沉迷这个游戏，自己也有一套大体的策略，大部分时候能在8次之内猜中，有时不能。 不如养个AI来替我解解看，看看它需要多少次猜中呢？
<!-- date:  2017-05-14 -->
tags:
    - 技术
    - AI
    - 游戏
---

人工智能最近火的不行，懂行的、不懂行的、技术圈的、嘴炮圈的都纷纷谈论自己对AI的看法，有的乐观、有的悲观。大概都是alpha go和watson两位明星带起来的吧。

说到alpha go，闲扯一句，作为一个围棋爱好者，去年的3月，我是绝不相信alpha go能战胜李世石的。然而，事实令人震惊，以至于李世石赢下的第四局都有阴谋论的人认为是有了“心机”的机器“故意”输掉的。今年再过几天，柯洁面对又强大了不知多少倍的alpha go，我再也没法对人类棋手乐观起来了。如果不幸全败，对于习惯出言狂放的柯少侠怕是打击不小。为他祝福，希望他不要受这次比赛的影响，毕竟还要靠他继续压制韩国围棋呢：）

拉回正题，在AI一片火热的氛围下，本来就对AI颇感兴趣的我自然又翻出那本《机器学习》来自虐了。 一遍读下来，几十个算法，只能大致了解其皮毛，对于细节处、大堆公式处都不求甚解的跳过去了。 AI本该是个很有趣的东西，纯粹啃书怕是要被大段的公式磨灭去了兴趣。于是乎，我开始寻找身边的一些有趣的需要策略的游戏，看看能不能用我现有浅薄的AI只是解决之，对自己寓教于乐。
首先想到的便是高中时候的神器————文曲星：体积不大，却有不少好玩的游戏，甚至还可以编程。当然，最大的好处是，可以借着查英语单词的名义正大光明的在家长面前拿出来玩[奸笑]

文曲星上有个经典的游戏：猜数字。电脑生成个从0～9随机挑选四个（不重复）数字组成一个四位数，给你8次机会猜中是哪四个数字以及排列是什么样的。 当然，每轮电脑会就上一轮你的猜测给出形如？A?B的反馈，A代表猜中数字且位置正确的数字个数。B代表猜中数字但位置不正确的数字个数。比如：答案是0123， 你猜0432，反馈就是1A2B（0数字位置正确，2，3数字正确但位置错误）。

当时挺沉迷于这个游戏，自己也总结出了一些经验：1.尽量先快速猜遍所有的数字，把正确数字的范围缩减。 2.上一轮可能正确的数字在下一轮要换一个位置，用来判断这个数字究竟是A还是B。 基于这个思想，大部分情况下我都能在8步之内猜中，有时候也猜不出来。因为这终究只是个思想，不是严谨可执行的策略。AI时代来临，我能不能养个AI，把我的思想落地，达到每次都能在规定步数内猜中呢？

说干就干， life is short, I write python. 用python简单实现一个游戏逻辑之后，先写一个StupidAI测试一下，策略是每次都随机猜。 显而易见， StupidAI平均要花费10*9*8*7=5040次才能猜中, 下面开始我们的AI优化之旅：

其实整个猜数过程就是一个剪枝的过程， 原本的答案集是一棵有5040个叶子节点的枝繁叶茂的大树， 每次猜测得到反馈结果之后我们都可剪掉一部分叶子（剪掉那些与反馈结果不一致的叶子）。我们的目标就是在8步之内把这棵树剪到只剩最后一片树叶。
怎么剪呢？ 从第一位数字开始，我们看看在这一位上当前的答案集中有每个数字出现了多少次，每次我们都猜出现次数最多的那个数字（不管是否正确，都能尽量剪掉最多的树叶）。这样应该是剪枝剪得最快的方案吧，我们姑且叫他CutTreeAI， 测试一下效果：

![cuttree 效果](http://7xr9qj.com1.z0.glb.clouddn.com/cuttree.png)

有些出乎意料的顺利， 本来还打算在选择先剪哪一位数的策略上实用一些信息论的方法呢。可能这个游戏得规则比较简单，用一些简单暴力得方法就能解决，但是还是蛮好玩的。 实现的代码存放在 [https://github.com/jerrychen1990/simple-AI](https://github.com/jerrychen1990/simple-AI)下面了。后续会继续添加新的好玩的AI算法到里面，感兴趣的朋友也可以fork出来，用别的方法实现AI对比一下性能。
